name: CI Base

on:
  workflow_call:
    inputs:
      NX_NO_CLOUD:
        type: boolean
    secrets:
      NX_TOKEN:
        required: false

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_TOKEN }}
  NX_NO_CLOUD: ${{ inputs.NX_NO_CLOUD }}
  NODE_VERSION: 18.x

jobs:
  check_simple:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: master
      - run: git branch --track master origin/master
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install packages
        run: npm ci

        # Before any nx use
      - name: Check locales
        run: bash verify-i18n.bash

      # Verify that all mikro-orm versions are correct (useful for renovate)
      - name: Verify Mikro-orm versions
        run: npx mikro-orm debug

      - name: Comments coverage
        run: npm run compodoc:coverage

  check_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: master
      - run: git branch --track master origin/master
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install packages
        run: npm ci

      - name: Lint
        run: npm run lint

  check_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install packages
        run: npm ci

      - name: Build
        run: npm run build

  check_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install packages
        run: npm ci

      - name: Tests
        run: npm run test:ci

  check_tests_e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: master
      - run: git branch --track master origin/master
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install packages
        run: npm ci

      - name: Tests e2e
        run: npm run test:e2e

      - name: Upload Cypress artifacts in case of error in `frontend`
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          if-no-files-found: warn
          name: cypress-logs
          path: dist/cypress/apps/frontend-e2e/
          retention-days: 7

  # to put everything together
  checks:
    runs-on: ubuntu-latest
    needs: [check_simple, check_lint, check_build, check_tests, check_tests_e2e]
    steps:
      - run: echo OK
