name: Release & Publish

on:
  push:
    branches:
      - master

jobs:
  job:
    # Ignore devDependencies updates
    if: ${{ !(github.actor == 'renovate[bot]' && contains(github.event.head_commit.message, 'chore(deps):')) }}

    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_TOKEN }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: "npm"
          node-version: 18.x

      - name: Install packages
        run: npm ci

      - name: Generate code coverage summary
        timeout-minutes: 15
        run: npm run test:ci

      - name: Generating `common` lib coverage badges
        uses: jpb06/jest-badges-action@latest
        with:
          branches: ci-status
          coverage-summary-path: ./coverage/libs/common/coverage-summary.json
          no-commit: true
          output-folder: ./.badges/libs/common/code
      - name: Generating `ng` lib coverage badges
        uses: jpb06/jest-badges-action@latest
        with:
          branches: ci-status
          coverage-summary-path: ./coverage/libs/ng/coverage-summary.json
          no-commit: true
          output-folder: ./.badges/libs/ng/code

      - name: Generating `backend` app coverage badges
        uses: jpb06/jest-badges-action@latest
        with:
          branches: ci-status
          coverage-summary-path: ./coverage/apps/backend/coverage-summary.json
          no-commit: true
          output-folder: ./.badges/apps/backend/code
      - name: Generating `frontend` app coverage badges
        uses: jpb06/jest-badges-action@latest
        with:
          branches: ci-status
          coverage-summary-path: ./coverage/apps/frontend/coverage-summary.json
          no-commit: true
          output-folder: ./.badges/apps/frontend/code

      - name: Set default code coverage badges
        run: for path in .badges/*/*/code; do cp $path/coverage-jest\ coverage.svg $path/coverage.svg; done

      - name: Generate apps comment coverage
        run: npm run compodoc:build
      - name: Move comment coverage badges
        run: for app in backend frontend; do cp dist/documentation/$app/images/coverage-badge-documentation.svg .badges/apps/$app/comment/coverage.svg; done

      - name: Set git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add badges
        run: git add .badges

      - name: Release and publish
        run: npx release-it --ci --no-git.requireCleanWorkingDir
